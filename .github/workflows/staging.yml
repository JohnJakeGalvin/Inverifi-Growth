# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        # Setup the node environment
      - name: Set the npm auth token
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.APPS_pat }}" >> .npmrc
      - name: Node.js setup
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 16.x
          always-auth: true
          scope: '@invotra'
          registry-url: https://npm.pkg.github.com/
      - name: Install yarn
        run: npm install -g yarn@^1
      - name: Install dependencies
        # --immutable
        # Abort with an error exit code if the lockfile was to be modified
        run: |
          yarn install --immutable
        env:
          NODE_AUTH_TOKEN: ${{secrets.GH_ACCESS_TOKEN}}
      - name: Invalidate apollo cache on deploy
        run: |
          echo APOLLO_SCHEMA_VESION=${{ github.run_id }} >> .env
      - name: Select staging configuration
        run: yarn run staging-config
      - run: yarn run build --if-present
        env:
          CI: false
          REACT_APP_BASE_PATH: "/apps/template/"
          REACT_APP_USE_SERVICE_WORKER: true
          SASS_PATH: "node_modules:src"
          REACT_APP_ASSET_PATH: "https://staging.workpaths.app/invotra/apps/template/"
          REACT_APP_INVOTRA_THEME: "https://staging.workpaths.app/invotra/apps/theme/theme.js"
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete --exclude 'versions/*'
        env:
          AWS_S3_BUCKET: staging.workpaths.app
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
          SOURCE_DIR: "build"
          DEST_DIR: invotra/apps/${{ secrets.APP_NAME }}
      - name: Invalidate cloudfront cache
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.STAGING_DISTRIBUTION }}
          PATHS: '/*'
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
